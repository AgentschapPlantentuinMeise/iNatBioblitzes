plot(observers,observations)
ggplot(observers,observations)
install.packages("ggplot2")
library("ggplot2")
library("ggplot2")
iNatProject <- read.csv("~/notebooks/iNatBioblitzes/iNatProject.csv", encoding="UTF-8", comment.char="#")
> ggplot(observers,observations)
library("tidyverse")
filter(iNatProject, observers > 1)
projects <- filter(iNatProject, observers > 1)
ggplot(data=project) +
geom_point(mapping = aes(x=observers,y=oberservations))
ggplot(data=projects) +
geom_point(mapping = aes(x=observers,y=oberservations))
ggplot(data=projects) +
geom_point(mapping = aes(x=observers,y=observations))
ggplot(data=projects) +
geom_point(mapping = aes(x=log(observers),y=log(observations))
)
ggplot(data=projects) +
geom_point(mapping = aes(x=log(hours/observers),y=log(observations))
)
ggplot(data=projects) +
geom_point(mapping = aes(x=log(hours/observers),y=log(species)))
ggplot(data=projects) +
geom_point(mapping = aes(x=log(observers),y=log(species)))
ggplot(data=projects) +
geom_point(mapping = aes(x=log(species),y=log(observations)))
ggplot(data=projects) +
geom_point(mapping = aes(x=log(observations),y=log(species)))
ggplot(data=projects) +
geom_point(mapping = aes(x=log(hours*observers),y=log(species)))
ggplot(data=projects) +
geom_point(mapping = aes(x=log(hours),y=log(species)))
ggplot(data=projects) +
geom_point(mapping = aes(x=hours*observers,y=species))
ggplot(data=projects) +
geom_point(mapping = aes(x=log(hours*observers),y=log(species)))
ggplot(data=projects) +
geom_point(mapping = aes(x=hours*observers,y=species)) +
scale_x_continuous(trans='log2') +
scale_y_continuous(trans='log2')
ggplot(data=projects) +
geom_point(mapping = aes(x=hours*observers,y=species)) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
ggplot(data=projects) +
geom_point(mapping = aes(x=hours*observers/1000,y=species)) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
ggplot(data=projects) +
geom_point(mapping = aes(x=hours*observers/1000,y=species, color=project_type)) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
ggplot(data=projects) +
geom_point(mapping = aes(x=observers,y=identifiers, color=project_type)) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
projects <- filter(projects, identifiers > 0)
ggplot(data=projects) +
geom_point(mapping = aes(x=observers,y=identifiers, color=project_type)) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
ggplot(data=projects) +
geom_point(mapping = aes(x=observers,y=identifiers, color=project_type)) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') + geom_smooth(method = "lm")
ggplot(data=projects) +
geom_point(mapping = aes(x=observers,y=identifiers, color=project_type)) + geom_smooth(method = "lm")
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
ggplot(data=projects) +
geom_point(mapping = aes(x=observers,y=identifiers, color=project_type)) + geom_smooth(method = "lm") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
ggplot(projects, aes(observers, identifiers)) + geom_point() + geom_smooth(method = "lm")
ggplot(projects, aes(observers, identifiers)) + geom_point() + geom_smooth(method = "lm") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
ggplot(projects, aes(observers, identifiers)) + geom_point() + geom_smooth(method = "gam") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
ggplot(projects, aes(observers, identifiers)) + geom_point() + geom_smooth(method = "loess") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
ggplot(projects, aes(observers, identifiers)) + geom_point() + geom_smooth(method = "glm") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
ggplot(projects, aes(observers, identifiers)) + geom_point() + geom_smooth(method = "lm") +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
ggplot(projects, aes(observers, identifiers)) + geom_point() + geom_smooth(method = "lm", se=FALSE) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
ggplot(projects, aes(observers, hours)) + geom_point() + geom_smooth(method = "lm", se=FALSE) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
ggplot(projects, aes(observers, hours)) + geom_point() + geom_smooth(method = "lm", se=TRUE) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')
ggplot(projects, aes(observers, hours)) + geom_point() + geom_smooth(method = "lm", se=TRUE) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
theme_classic()
ggplot(data=projects) +
geom_point(mapping = aes(x=hours*observers/1000,y=species, color=project_type)) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
theme_classic()
ggplot(projects, aes(hours*observers/1000, species)) + geom_point() + geom_smooth(method = "lm", se=TRUE) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
theme_classic()
ggplot(projects, aes(hours*observers/1000, species)) + geom_point() + geom_smooth(method = "lm", se=FALSE) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
theme_classic()
ggplot(projects, aes(hours*observers/1000, species)) + geom_point() + geom_smooth(method = "lm", se=FALSE) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
xlab(“New X axis label”)
theme_classic()
ggplot(projects, aes(hours*observers/1000, species)) + geom_point() + geom_smooth(method = "lm", se=FALSE) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
xlab(“Observer effort (length of project (hours) X number of observers)”) +
theme_classic()
ggplot(projects, aes(hours*observers/1000, species)) + geom_point() + geom_smooth(method = "lm", se=FALSE) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
xlab('Observer effort (length of project (hours) X number of observers)') +
theme_classic()
ggplot(projects, aes(hours*observers/1000, species)) + geom_point() + geom_smooth(method = "lm", se=FALSE) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
xlab('Observer effort (length of project (hours) x number of observers)') +
ylab('Number of species observed)') +
theme_classic()
ggplot(projects, aes(hours*observers/1000, species)) + geom_point() + geom_smooth(method = "lm", se=FALSE) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
xlab('Observer effort (length of project (hours) x number of observers)') +
ylab('Number of species observed') +
theme_classic()
ggplot(projects, aes(hours*observers/1000, species)) + geom_point() + geom_smooth(method = "glm", se=FALSE) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
xlab('Observer effort (length of project (hours) x number of observers)') +
ylab('Number of species observed') +
theme_classic()
ggplot(projects, aes(hours*observers/1000, species)) + geom_point() + geom_smooth(method = "gam", se=FALSE) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
xlab('Observer effort (length of project (hours) x number of observers)') +
ylab('Number of species observed') +
theme_classic()
ggplot(projects, aes(hours*observers/1000, species)) + geom_point() + geom_smooth(method = "lm", se=FALSE) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
xlab('Observer effort (length of project (hours) x number of observers)') +
ylab('Number of species observed') +
theme_classic()
ggplot(projects, aes(observers, hours)) + geom_point() + geom_smooth(method = "lm", se=TRUE) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
theme_classic()
ggplot(projects, aes(hours, observers)) + geom_point() + geom_smooth(method = "lm", se=TRUE) +
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10') +
theme_classic()
describe(projects)
summarise(projects)
summarise(mean_size = mean(observations, na.rm = TRUE))
summarise(data=projects, mean_size = mean(observations, na.rm = TRUE))
summarise(mean_size = mean(data=projects,observations, na.rm = TRUE))
projects %>% summarise(mean_size = mean(observations, na.rm = TRUE))
projects %>% summarise(mean_size = mean(observers, na.rm = TRUE))
projects %>% summarise(mean_size = mean(species, na.rm = TRUE))
projects %>% summarise(mean_size = mean(identifiers, na.rm = TRUE))
projects %>% summarise(mean_size = count(identifiers, na.rm = TRUE))
projects %>% summarise(mean_size = hours(identifiers, na.rm = TRUE))
projects %>% summarise(mean_size = mean(hours, na.rm = TRUE))
projects %>% summarise(mean_size = mode(hours, na.rm = TRUE))
projects %>% summarise(mean_size = mode(hours))
projects %>% summarise(mode(hours))
projects %>% mode(hours)
tally(projects)
count(projects)
mode(projects$hours)
mode(projects$duration)
table(projects$duration)
mode(projects$duration)
table(projects$hours)
mode(hours)
Mode(hours)
projects %>% summarise(mean_size = mode(hours))
#what is the
projects %>% summarise(mean_size = mean(hours, na.rm = TRUE))
projects %>% summarise(mean_size = mode(hours))
projects %>% mode(hours)
projects %>% mode()
projects$hours %>% mode()
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
Mode(hours)
Mode(projects$hours)
# A count of all the projects used
> tally(projects)
# A count of all the projects used
tally(projects)
#What is the average number of observations per bioblitz
projects %>% summarise(mean_size = mean(observations, na.rm = TRUE))
#What is the average number of observers per bioblitz
projects %>% summarise(mean_size = mean(observers, na.rm = TRUE))
#What is the average number of species recorded per bioblitz
projects %>% summarise(mean_size = mean(species, na.rm = TRUE))
#What is the average number of identifiers involved in the bioblitz
projects %>% summarise(mean_size = mean(identifiers, na.rm = TRUE))
#what is the average length of the bioblitzes in our sample
projects %>% summarise(mean_size = mean(hours, na.rm = TRUE))
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
#The most common length of a bioblitz
Mode(projects$hours)
#What is the average number of observations per bioblitz
projects %>% summarise(mean_size = mean(observations, na.rm = TRUE))
#What is the average number of observers per bioblitz
projects %>% summarise(mean_size = mean(observers, na.rm = TRUE))
#What is the average number of species recorded per bioblitz
projects %>% summarise(mean_size = mean(species, na.rm = TRUE))
#What is the average number of identifiers involved in the bioblitz
projects %>% summarise(mean_size = mean(identifiers, na.rm = TRUE))
#what is the average length of the bioblitzes in our sample
projects %>% summarise(mean_size = mean(hours, na.rm = TRUE))
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
#The most common length of a bioblitz
Mode(projects$hours)
# A count of all the projects used
tally(projects)
version
ggplot(projects, aes(hours, observers)) + geom_point() + geom_smooth(method = "lm", se=TRUE) +
theme_classic()
ggplot(projects, start, observers)
ggplot(projects, aes(start, observers))
ggplot(projects, aes(start, log(observers)))
ggplot(projects, aes(end, log(observers)))
ggplot(projects, aes(end.month(), observers))
ggplot(projects, aes(end.month, observers))
ggplot(projects, aes(month(month), observers))
ggplot(projects, aes(month(projects$month), observers))
ggplot(projects, aes(month(projects$month), observers))
projects$month
ggplot(data=projects, aes(x=projects$observations)) +
geom_histogram(breaks=seq(20, 50, by=2),
col="red",
fill="green",
alpha = .2) +
labs(title="", x="Age", y="Count") +
xlim(c(18,52)) +
ylim(c(0,30))
ggplot(data=projects, aes(x=projects$observations)) +
geom_histogram(breaks=seq(20, 50, by=2),
col="red",
fill="green",
alpha = .2) +
labs(title="", x="Age", y="Count") +
xlim(c(0,52)) +
ylim(c(0,30))
ggplot(data=projects, aes(x=projects$observations)) +
geom_histogram(breaks=seq(20, 50, by=2),
col="red",
fill="green",
alpha = .2) +
labs(title="", x="Age", y="Count") +
xlim(c(0,100)) +
ylim(c(0,30))
ggplot(data=projects, aes(x=projects$observations)) +
geom_histogram(breaks=seq(0, 50, by=2),
col="red",
fill="green",
alpha = .2) +
labs(title="", x="Age", y="Count") +
xlim(c(0,100)) +
ylim(c(0,30))
ggplot(data=projects, aes(x=projects$observations)) +
geom_histogram(breaks=seq(0, 500, by=2),
col="red",
fill="green",
alpha = .2) +
labs(title="", x="Age", y="Count") +
xlim(c(0,100)) +
ylim(c(0,30))
ggplot(data=projects, aes(x=projects$observations)) +
geom_histogram(breaks=seq(0, 500, by=7),
col="red",
fill="green",
alpha = .2) +
labs(title="", x="Age", y="Count") +
xlim(c(0,100)) +
ylim(c(0,30))
ggplot(data=projects, aes(x=projects$species)) +
geom_histogram(breaks=seq(0, 500, by=7),
col="red",
fill="green",
alpha = .2) +
labs(title="", x="Age", y="Count") +
xlim(c(0,100)) +
ylim(c(0,30))
ggplot(data=projects, aes(x=projects$species)) +
geom_histogram(breaks=seq(0, 500, by=7),
col="red",
fill="green",
alpha = .2) +
labs(title="", x="Age", y="Count")
ggplot(data=projects, aes(x=projects$species)) +
geom_histogram(breaks=seq(0, 1000, by=7),
col="red",
fill="green",
alpha = .2) +
labs(title="", x="Age", y="Count")
ggplot(data=projects, aes(x=projects$species)) +
geom_histogram(breaks=seq(0, 5000, by=7),
col="red",
fill="green",
alpha = .2) +
labs(title="", x="Age", y="Count")
ggplot(data=projects, aes(x=projects$species)) +
geom_histogram(breaks=seq(0, 5000, by=50),
col="red",
fill="green",
alpha = .2) +
labs(title="", x="Age", y="Count")
ggplot(data=projects, aes(x=projects$species)) +
geom_histogram(breaks=seq(0, 5000, by=50),
col="black",
fill="green",
alpha = .2) +
labs(title="", x="Number of species recorded", y="Count")
ggplot(data=projects, aes(x=projects$observations)) +
geom_histogram(breaks=seq(0, 500, by=7),
col="red",
fill="green",
alpha = .2) +
labs(title="", x="Age", y="Count")
ggplot(data=projects, aes(x=projects$observations)) +
geom_histogram(breaks=seq(0, 2000, by=7),
col="red",
fill="green",
alpha = .2) +
labs(title="", x="Age", y="Count")
ggplot(data=projects, aes(x=projects$observations)) +
geom_histogram(breaks=seq(0, 2000, by=10),
col="red",
fill="green",
alpha = .2) +
labs(title="", x="Age", y="Count")
ggplot(data=projects, aes(x=projects$species)) +
geom_histogram(breaks=seq(0, 5000, by=50),
col="black",
fill="green",
alpha = .2) +
theme_bw() +
labs(title="", x="Number of species recorded", y="Count")
ggplot(data=projects, aes(x=projects$observations)) +
geom_histogram(breaks=seq(0, 2000, by=10),
col="red",
fill="green",
alpha = .2) +
theme_bw() +
labs(title="", x="Age", y="Count")
ggplot(data=projects, aes(x=projects$observations)) +
geom_histogram(breaks=seq(0, 2000, by=10),
col="red",
fill="green",
alpha = .2) +
theme_bw() +
labs(title="", x="Number of observations", y="Count")
ggplot(data=projects, aes(x=projects$observers)) +
geom_histogram(breaks=seq(0, 5000, by=50),
col="black",
fill="green",
alpha = .2) +
theme_bw() +
labs(title="", x="Number of species recorded", y="Count")
ggplot(data=projects, aes(x=projects$observers)) +
geom_histogram(breaks=seq(0, 1000, by=50),
col="black",
fill="green",
alpha = .2) +
theme_bw() +
labs(title="", x="Number of species recorded", y="Count")
ggplot(data=projects, aes(x=projects$observers)) +
geom_histogram(breaks=seq(0, 1000, by=10),
col="black",
fill="green",
alpha = .2) +
theme_bw() +
labs(title="", x="Number of species recorded", y="Count")
ggplot(data=projects, aes(x=projects$observers)) +
geom_histogram(breaks=seq(0, 100, by=10),
col="black",
fill="green",
alpha = .2) +
theme_bw() +
labs(title="", x="Number of species recorded", y="Count")
ggplot(data=projects, aes(x=projects$observers)) +
geom_histogram(breaks=seq(0, 1000, by=10),
col="black",
fill="green",
alpha = .2) +
theme_bw() +
labs(title="", x="Number of species recorded", y="Count")
ggplot(data=projects, aes(x=projects$identifiers)) +
geom_histogram(breaks=seq(0, 1000, by=10),
col="black",
fill="green",
alpha = .2) +
theme_bw() +
labs(title="", x="Number of species recorded", y="Count")
# Observations histogram
p1 <- ggplot(data=projects, aes(x=projects$observations)) +
geom_histogram(breaks=seq(0, 2000, by=10),
col="red",
fill="green",
alpha = .2) +
theme_bw() +
labs(title="", x="Number of observations", y="Count")
# Observations histogram
p2 <- ggplot(data=projects, aes(x=projects$species)) +
geom_histogram(breaks=seq(0, 5000, by=50),
col="black",
fill="green",
alpha = .2) +
theme_bw() +
labs(title="", x="Number of species recorded", y="Count")
# Observations histogram
p3 <- ggplot(data=projects, aes(x=projects$observers)) +
geom_histogram(breaks=seq(0, 1000, by=10),
col="black",
fill="green",
alpha = .2) +
theme_bw() +
labs(title="", x="Number of observers", y="Count")
# Observations histogram
p4 <- ggplot(data=projects, aes(x=projects$identifiers)) +
geom_histogram(breaks=seq(0, 1000, by=10),
col="black",
fill="green",
alpha = .2) +
theme_bw() +
labs(title="", x="Number of identifiers", y="Count")
grid.arrange(p1, p2, nrow = 1)
install.packages("gridExtra")
library(gridExtra)
grid.arrange(p1, p2, nrow = 1)
grid.arrange(p1, p2, p3, p4, nrow = 2)
# Observations histogram
p1 <- ggplot(data=projects, aes(x=projects$observations)) +
geom_histogram(breaks=seq(0, 2000, by=10),
col="black",
fill="green",
alpha = .2) +
theme_bw() +
labs(title="", x="Number of observations", y="Count")
# Observations histogram
p1 <- ggplot(data=projects, aes(x=projects$observations)) +
geom_histogram(breaks=seq(0, 2000, by=10),
col="black",
fill="green",
alpha = .2) +
theme_bw() +
labs(title="", x="Number of observations", y="Count")
# Observations histogram
p2 <- ggplot(data=projects, aes(x=projects$species)) +
geom_histogram(breaks=seq(0, 5000, by=50),
col="black",
fill="green",
alpha = .2) +
theme_bw() +
labs(title="", x="Number of species recorded", y="")
# Observations histogram
p3 <- ggplot(data=projects, aes(x=projects$observers)) +
geom_histogram(breaks=seq(0, 1000, by=10),
col="black",
fill="green",
alpha = .2) +
theme_bw() +
labs(title="", x="Number of observers", y="Count")
# Observations histogram
p4 <- ggplot(data=projects, aes(x=projects$identifiers)) +
geom_histogram(breaks=seq(0, 1000, by=10),
col="black",
fill="green",
alpha = .2) +
theme_bw() +
labs(title="", x="Number of identifiers", y="")
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2)
